{"version":3,"sources":["apis/ticket.api.js","utils/DateUtil.js","utils/StatusBadgeBg.js","components/TicketTable/Table.jsx","components/Pagination/index.jsx","components/ErrorBoundary/index.jsx","components/TicketTable/index.jsx","pages/Dashboard/Dashboard.jsx","pages/TicketDetail/TicketEmpty.view.jsx","pages/TicketDetail/TicketDetail.view.jsx","pages/TicketDetail/TicketDetail.jsx","components/Navbar/index.jsx","pages/Error/404.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["getAllTicketsAPI","perPage","page","a","axios","get","params","response","getTicketByIdAPI","id","console","log","formatDate","dateString","Date","toLocaleString","StatusBadgeBg","open","pending","solved","badgeBg","status","Table","tickets","history","useHistory","className","data-testid","scope","map","ticket","onClick","push","subject","requester_id","updated_at","React","memo","Pagination","currentPage","lastPage","onPageClick","pageButtons","idx","aria-label","type","ErrorBoundary","props","state","hasError","error","errorInfo","this","children","Component","TicketTable","useState","getTickets","setTickets","getCurrentPage","setCurrentPage","getLastPage","setLastPage","useEffect","then","data","Math","floor","count","Dashboard","TicketEmpty","to","TicketDetailView","isLoading","Object","keys","length","created_at","style","textJustify","description","TicketDetail","ticketId","useParams","getTicket","setTicket","getLoading","setLoading","finally","Navbar","backgroundColor","viewBox","width","fill","d","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","NotFoundPage","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1475af3f.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const getAllTicketsAPI = async (perPage, page) => {\n  const response = await axios.get('/api/v1/tickets', {\n    params: {\n      perPage,\n      page,\n    },\n  });\n\n  return response;\n};\n\nexport const getTicketByIdAPI = async (id) => {\n  const response = await axios.get(`/api/v1/tickets/${id}`);\n\n  console.log(response);\n  return response;\n};\n","const formatDate = (dateString) => {\n  const date = new Date(dateString);\n\n  return date.toLocaleString();\n};\n\nexport default formatDate;\n","const StatusBadgeBg = {\n  open: 'bg-danger',\n  pending: 'bg-primary',\n  solved: 'bg-success',\n};\n\nconst badgeBg = (status) => StatusBadgeBg[status];\n\nexport default badgeBg;\n","import React from 'react';\nimport './Table.css';\nimport { useHistory } from 'react-router-dom';\nimport { formatDate, badgeBg } from '../../utils';\n\nconst Table = ({ tickets }) => {\n  const history = useHistory();\n  return (\n    <table className=\"table table-hover ticket-table\" data-testid=\"ticket-table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">ID</th>\n          <th scope=\"col\">Status</th>\n          <th scope=\"col\">Subject</th>\n          <th scope=\"col\">Requester</th>\n          <th scope=\"col\">Requester updated</th>\n        </tr>\n      </thead>\n      <tbody>\n        {tickets.map((ticket) => (\n          <tr key={ticket.id} onClick={() => history.push(`/ticket/${ticket.id}`)}>\n            <th scope=\"row\">{ticket.id}</th>\n            <th scope=\"col\">\n              <span className={`badge rounded-pill ms-3 px-4 ${badgeBg(ticket.status)}`}>\n                {ticket.status}\n              </span>\n            </th>\n            <td>{ticket.subject}</td>\n            <td>{ticket.requester_id}</td>\n            <td>{formatDate(ticket.updated_at)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\nexport default React.memo(Table);\n","/* eslint-disable no-unused-vars */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nconst Pagination = ({ currentPage, lastPage, onPageClick }) => {\n  const pageButtons = [];\n  for (let idx = currentPage - 2; idx <= currentPage + 2 && idx <= lastPage; idx++) {\n    if (idx < 1) { continue; }\n    pageButtons.push(idx);\n  }\n\n  return (\n    <nav aria-label=\"...\">\n      <ul className=\"pagination\">\n\n        <li className=\"page-item\">\n          <button className=\"page-link\" type=\"button\" onClick={() => onPageClick(1)}>«</button>\n        </li>\n\n        <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n          <button className=\"page-link\" type=\"button\" onClick={() => onPageClick(currentPage - 1)}>‹</button>\n        </li>\n\n        {pageButtons.map((page) => (\n          <li className={`page-item ${page === currentPage ? 'active' : ''}`} key={page}>\n            <button className=\"page-link\" type=\"button\" onClick={() => onPageClick(page)}>{page}</button>\n          </li>\n        ))}\n\n        <li className={`page-item page-item-dynamic ${currentPage === lastPage ? 'disabled' : ''}`}>\n          <button className=\"page-link\" type=\"button\" onClick={() => onPageClick(currentPage + 1)}>›</button>\n        </li>\n\n        <li className=\"page-item\">\n          <button className=\"page-link\" type=\"button\" onClick={() => onPageClick(lastPage)}>»</button>\n        </li>\n      </ul>\n    </nav>\n\n  );\n};\n\nexport default React.memo(Pagination);\n","/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.error(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { useEffect, useState } from 'react';\nimport { getAllTicketsAPI } from '../../apis/ticket.api';\nimport Table from './Table';\nimport Pagination from '../Pagination';\nimport ErrorBoundary from '../ErrorBoundary';\n\nconst TicketTable = () => {\n  const [getTickets, setTickets] = useState([]);\n  const [getCurrentPage, setCurrentPage] = useState(1);\n  const [getLastPage, setLastPage] = useState(1);\n  const perPage = 25;\n\n  useEffect(() => {\n    getAllTicketsAPI(perPage, getCurrentPage)\n      .then((response) => {\n        if (response.data) {\n          setTickets(response.data.tickets);\n          setLastPage(Math.floor((response.data.count - 1) / perPage) + 1);\n        }\n      });\n  }, [getCurrentPage]);\n\n  return (\n    <ErrorBoundary>\n      <Table tickets={getTickets} />\n      <Pagination\n        currentPage={getCurrentPage}\n        lastPage={getLastPage}\n        onPageClick={(page) => setCurrentPage(page)}\n      />\n    </ErrorBoundary>\n  );\n};\n\nexport default React.memo(TicketTable);\n","import React from 'react';\nimport TicketTable from '../../components/TicketTable';\n\nconst Dashboard = () => (\n  <section className=\"Dashboard mt-5\">\n    <h1>Ticket table for tickets at lusanney.zendesk.com</h1>\n    <TicketTable />\n  </section>\n);\n\nexport default React.memo(Dashboard);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst TicketEmpty = () => (\n  <section className=\"TicketDetail mt-5\">\n    <h1>Sorry, the ticket you are looking for is not found</h1>\n    <h3>\n      Please go back to Dashboard with the link:\n\n      <Link to=\"/dashboard\" className=\"ms-3 btn btn-outline-primary\" data-testid=\"go-dashboard\">Dashboard</Link>\n    </h3>\n  </section>\n\n);\n\nexport default TicketEmpty;\n","import React from 'react';\nimport { formatDate, badgeBg } from '../../utils';\nimport TicketEmpty from './TicketEmpty.view';\n\nconst TicketDetailView = ({ ticket, isLoading }) => {\n  const isTicketFound = Object.keys(ticket).length !== 0;\n\n  return (\n    isTicketFound || isLoading ? (\n      <section className=\"TicketDetail mt-5\">\n\n        <div className=\"row\">\n          <h2 data-testid=\"ticket-subject\">{ticket.subject}</h2>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"requester-group-badge\">\n              Requester:\n              {' '}\n              <span data-testid=\"ticket-requester\">\n\n                {ticket.requester_id}\n\n              </span>\n              <span data-testid=\"ticket-status\" className={`badge rounded-pill ms-3 px-4 ${badgeBg(ticket.status)}`}>\n                {ticket.status}\n              </span>\n            </div>\n          </div>\n\n          <div className=\"col\" data-testid=\"ticket-createdAt\">\n            Created:\n            {' '}\n            {formatDate(ticket.created_at)}\n          </div>\n        </div>\n\n        <div className=\"row mt-3\">\n          <div className=\"col-6\">\n            <b>Description</b>\n            <p style={{ textJustify: 'auto' }} data-testid=\"ticket-description\">{ticket.description}</p>\n          </div>\n\n        </div>\n\n      </section>\n    ) : <TicketEmpty />\n  );\n};\n\nexport default React.memo(TicketDetailView);\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getTicketByIdAPI } from '../../apis/ticket.api';\nimport ErrorBoundary from '../../components/ErrorBoundary';\nimport TicketDetailView from './TicketDetail.view';\n\nconst TicketDetail = () => {\n  const { ticketId } = useParams();\n  const [getTicket, setTicket] = useState({});\n  const [getLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    getTicketByIdAPI(ticketId)\n      .then((response) => {\n        if (response.data) {\n          setTicket(response.data.ticket);\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [ticketId]);\n\n  return (\n    <ErrorBoundary>\n      <TicketDetailView ticket={getTicket} isLoading={getLoading} />\n    </ErrorBoundary>\n\n  );\n};\n\nexport default React.memo(TicketDetail);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => (\n  <nav className=\"navbar navbar-expand-lg navbar-dark\" style={{ backgroundColor: '#03363D' }}>\n    <div className=\"container-fluid\">\n\n      <Link className=\"navbar-brand\" to=\"/dashboard\">\n        <span className=\"me-3\">\n          <svg id=\"ember1569\" className=\"ember-view ms-4\" viewBox=\"0 0 26 26\" style={{ width: 40 }}>\n            <path fill=\"currentColor\" d=\"M12 8.2v14.5H0zM12 3c0 3.3-2.7 6-6 6S0 6.3 0 3h12zm2 19.7c0-3.3 2.7-6 6-6s6 2.7 6 6H14zm0-5.2V3h12z\" />\n          </svg>\n        </span>\n\n        <span className=\"ml-3\">Zendesk Intern</span>\n\n      </Link>\n\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link active\" to=\"/dashboard\">Dashboard</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default React.memo(Navbar);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => (\n  <section className=\"mt-5\">\n    <h1>404 - NOT FOUND</h1>\n    <h2>The page you are looking for is not found</h2>\n    <h2>\n      Please go back to Dashboard with the link:\n\n      <Link to=\"/dashboard\" className=\"ms-3 btn btn-outline-primary\" data-testid=\"go-dashboard\">Dashboard</Link>\n    </h2>\n  </section>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport Dashboard from './pages/Dashboard/Dashboard';\nimport TicketDetail from './pages/TicketDetail/TicketDetail';\nimport Navbar from './components/Navbar';\nimport NotFoundPage from './pages/Error/404';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"container\">\n\n          <Switch>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n\n            <Route path=\"/ticket/:ticketId\">\n              <TicketDetail />\n            </Route>\n\n            <Route path=\"*\">\n              <NotFoundPage />\n            </Route>\n          </Switch>\n        </div>\n\n      </div>\n    </Router>\n\n  );\n}\n\nexport default React.memo(App);\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}