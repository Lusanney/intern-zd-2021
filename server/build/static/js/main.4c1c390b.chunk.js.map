{"version":3,"sources":["apis/ticket.api.js","utils/DateUtil.js","utils/StatusBadgeBg.js","components/TicketTable/Table.jsx","components/Pagination/index.jsx","components/TicketTable/index.jsx","pages/Dashboard/Dashboard.jsx","pages/TicketDetail/TicketDetail.jsx","components/Navbar/index.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["getAllTicketsAPI","perPage","page","a","axios","get","params","response","getTicketByIdAPI","id","formatDate","dateString","Date","toLocaleString","StatusBadgeBg","open","pending","solved","badgeBg","status","Table","tickets","history","useHistory","className","scope","map","ticket","onClick","push","subject","requester_id","updated_at","Pagination","currentPage","lastPage","onPageClick","pageButtons","idx","aria-label","type","TicketTable","useState","getTickets","setTickets","getCurrentPage","setCurrentPage","getLastPage","setLastPage","useEffect","then","data","Math","floor","count","Dashboard","TicketDetail","ticketId","useParams","getTicket","setTicket","created_at","style","textJustify","description","Navbar","backgroundColor","to","viewBox","width","fill","d","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c1c390b.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const getAllTicketsAPI = async (perPage, page) => {\n  const response = await axios.get('/api/v1/tickets', {\n    params: {\n      perPage,\n      page,\n    },\n  });\n\n  return response;\n};\n\nexport const getTicketByIdAPI = async (id) => {\n  const response = await axios.get(`/api/v1/tickets/${id}`);\n\n  return response;\n};\n","const formatDate = (dateString) => {\n  const date = new Date(dateString);\n\n  return date.toLocaleString();\n};\n\nexport default formatDate;\n","const StatusBadgeBg = {\n  open: 'bg-danger',\n  pending: 'bg-primary',\n  solved: 'bg-success',\n};\n\nconst badgeBg = (status) => StatusBadgeBg[status];\n\nexport default badgeBg;\n","import React from 'react';\nimport './Table.css';\nimport { useHistory } from 'react-router-dom';\nimport { formatDate, badgeBg } from '../../utils';\n\nconst Table = ({ tickets }) => {\n  const history = useHistory();\n  return (\n    <table className=\"table table-hover\" id=\"ticket-table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">ID</th>\n          <th scope=\"col\">Status</th>\n          <th scope=\"col\">Subject</th>\n          <th scope=\"col\">Requester</th>\n          <th scope=\"col\">Requester updated</th>\n        </tr>\n      </thead>\n      <tbody>\n        {tickets.map((ticket) => (\n          <tr key={ticket.id} onClick={() => history.push(`/ticket/${ticket.id}`)}>\n            <th scope=\"row\">{ticket.id}</th>\n            <th scope=\"col\">\n              <span className={`badge rounded-pill ms-3 px-4 ${badgeBg(ticket.status)}`}>\n                {ticket.status}\n              </span>\n            </th>\n            <td>{ticket.subject}</td>\n            <td>{ticket.requester_id}</td>\n            <td>{formatDate(ticket.updated_at)}</td>\n          </tr>\n        ))}\n        <tr />\n      </tbody>\n    </table>\n  );\n};\nexport default Table;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nconst Pagination = ({ currentPage, lastPage, onPageClick }) => {\n  const pageButtons = [];\n  for (let idx = currentPage - 2; idx <= currentPage + 2 && idx <= lastPage; idx++) {\n    if (idx < 1) { continue; }\n    pageButtons.push(idx);\n  }\n\n  return (\n    <nav aria-label=\"...\">\n      <ul className=\"pagination\">\n\n        <li className=\"page-item\">\n          <button className=\"page-link\" type=\"button\" onClick={() => onPageClick(1)}>«</button>\n        </li>\n\n        <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n          <button className=\"page-link\" type=\"button\" onClick={() => onPageClick(currentPage - 1)}>‹</button>\n        </li>\n\n        {pageButtons.map((page) => (\n          <li className={`page-item ${page === currentPage ? 'active' : ''}`}>\n            <button className=\"page-link\" type=\"button\" onClick={() => onPageClick(page)}>{page}</button>\n          </li>\n        ))}\n\n        <li className={`page-item ${currentPage === lastPage ? 'disabled' : ''}`}>\n          <button className=\"page-link\" type=\"button\" onClick={() => onPageClick(currentPage + 1)}>›</button>\n        </li>\n\n        <li className=\"page-item\">\n          <button className=\"page-link\" type=\"button\" onClick={() => onPageClick(lastPage)}>»</button>\n        </li>\n      </ul>\n    </nav>\n\n  );\n};\n\nexport default Pagination;\n","import React, { useEffect, useState } from 'react';\nimport { getAllTicketsAPI } from '../../apis/ticket.api';\nimport Table from './Table';\nimport Pagination from '../Pagination/index';\n\nconst TicketTable = () => {\n  const [getTickets, setTickets] = useState([]);\n  const [getCurrentPage, setCurrentPage] = useState(1);\n  const [getLastPage, setLastPage] = useState(1);\n  const perPage = 25;\n\n  useEffect(() => {\n    getAllTicketsAPI(perPage, getCurrentPage)\n      .then((response) => {\n        if (response.data) {\n          setTickets(response.data.tickets);\n          setLastPage(Math.floor((response.data.count - 1) / perPage) + 1);\n        }\n      });\n  }, [getCurrentPage]);\n\n  return (\n    <>\n      <Table tickets={getTickets} />\n      <Pagination\n        currentPage={getCurrentPage}\n        lastPage={getLastPage}\n        onPageClick={(page) => setCurrentPage(page)}\n      />\n    </>\n  );\n};\n\nexport default TicketTable;\n","import React from 'react';\nimport TicketTable from '../../components/TicketTable';\n\nconst Dashboard = () => (\n  <section className=\"Dashboard mt-5\">\n    <h1>Ticket table for tickets at lusanney.zendesk.com</h1>\n    <TicketTable />\n  </section>\n);\n\nexport default Dashboard;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getTicketByIdAPI } from '../../apis/ticket.api';\nimport { formatDate, badgeBg } from '../../utils';\n\nconst TicketDetail = () => {\n  const { ticketId } = useParams();\n  const [getTicket, setTicket] = useState({});\n\n  useEffect(() => {\n    getTicketByIdAPI(ticketId)\n      .then((response) => {\n        if (response.data) {\n          setTicket(response.data.ticket);\n        }\n      });\n  });\n\n  return (\n    <section className=\"TicketDetail mt-5\">\n\n      <div className=\"row\">\n        <h2>{getTicket.subject}</h2>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-md-4\">\n          <div className=\"requester-group-badge\">\n            Requester:\n            {' '}\n            {getTicket.requester_id}\n            <span className={`badge rounded-pill ms-3 px-4 ${badgeBg(getTicket.status)}`}>\n              {getTicket.status}\n            </span>\n          </div>\n          <div className=\"status-badge\" />\n\n        </div>\n\n        <div className=\"col\">\n          Created:\n          {' '}\n          {formatDate(getTicket.created_at)}\n        </div>\n      </div>\n\n      <div className=\"row mt-3\">\n        <div className=\"col-6\">\n          <b>Description</b>\n          <p style={{ textJustify: 'auto' }}>{getTicket.description}</p>\n        </div>\n\n      </div>\n\n    </section>\n  );\n};\n\nexport default TicketDetail;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => (\n  <nav className=\"navbar navbar-expand-lg navbar-dark\" style={{ backgroundColor: '#03363D' }}>\n    <div className=\"container-fluid\">\n\n      <Link className=\"navbar-brand\" to=\"/dashboard\">\n        <span className=\"me-3\">\n          <svg id=\"ember1569\" className=\"ember-view ms-4\" viewBox=\"0 0 26 26\" style={{ width: 40 }}>\n            <path fill=\"currentColor\" d=\"M12 8.2v14.5H0zM12 3c0 3.3-2.7 6-6 6S0 6.3 0 3h12zm2 19.7c0-3.3 2.7-6 6-6s6 2.7 6 6H14zm0-5.2V3h12z\" />\n          </svg>\n        </span>\n\n        <span className=\"ml-3\">Zendesk Intern</span>\n\n      </Link>\n\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link active\" to=\"/dashboard\">Dashboard</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default Navbar;\n","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport Dashboard from './pages/Dashboard/Dashboard';\nimport TicketDetail from './pages/TicketDetail/TicketDetail';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"container\">\n\n          <Switch>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n\n            <Route path=\"/ticket/:ticketId\">\n              <TicketDetail />\n            </Route>\n          </Switch>\n        </div>\n\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}